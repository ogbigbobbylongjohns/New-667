-- Load external scripts
loadstring(game:HttpGet("https://raw.githubusercontent.com/Pixeluted/adoniscries/main/Source.lua", true))()

local GUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/aaaa"))()

local UI = GUI:CreateWindow(" üóùÔ∏è unvield | best sl2 script | made by cor_s | [V2.1]", "yes it‚Äôs true")

local Home = UI:addPage("main", 1, true, 6)

Home:addLabel("‚öôÔ∏èmain", "main functions")




Home:addButton("apartment | bypass",function()
    

local player = game.Players.LocalPlayer

local function clearInsideApartments()
    while true do
        -- Find the player's character in workspace
        local character = workspace:FindFirstChild(player.Name)
        
        if character then
            -- Find "InsideApartments" inside the character
            local apartments = character:FindFirstChild("InsideApartments")
            
            if apartments then
                apartments:Destroy() -- Destroy the entire "InsideApartments" folder
                print("Destroyed 'InsideApartments' for", player.Name)
            end
        else
            warn("Character model not found in workspace")
        end
        
        wait(1) -- Repeat every second
    end
end

-- Run the function in a new thread
task.spawn(clearInsideApartments)

end)






Home:addButton("remove | camerashake", function()
    local g_ = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Camera_Bob")
    if g_ then g_:Destroy() end
end)

Home:addButton("auto | gifts", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/5wQNYkTB"))()
end)

local LP = UI:addPage("üíµauto farm (down)", 2, false, 6)
-- Label for autofarm
LP:addLabel("üíµauto farm", "all the features of autofarm")

LP:addToggle("Auto | SugarFarm", function(value)
    local isRunning = value  -- Set the isRunning flag based on the toggle value

    spawn(function()
        while isRunning do
            local targetCFrame = CFrame.new(185.410812, -401.020081, 664.975891, 0, 0, -1, 0, 1, 0, 1, 0, 0)

            -- Function to find the part with the exact CFrame
            local function findTargetPart()
                for _, part in ipairs(workspace:GetDescendants()) do
                    if part:IsA("BasePart") and (part.CFrame.Position - targetCFrame.Position).Magnitude < 0.1 then
                        return part
                    end
                end
                return nil
            end

            -- Trigger ProximityPrompt if part found
            task.spawn(function()
                local targetPart = findTargetPart()

                if targetPart then
                    for _, child in ipairs(targetPart:GetChildren()) do
                        if child:IsA("ProximityPrompt") then
                            fireproximityprompt(child) -- Trigger the ProximityPrompt
                        end
                    end
                end
            end)

            -- Run the purchase actions
            task.spawn(function()
                local args1 = { [1] = "Purchase", [2] = "SugarCane" }
                game:GetService("ReplicatedStorage"):WaitForChild("UI"):WaitForChild("SugarNPC"):FireServer(unpack(args1))
                wait(0.1)
                local args2 = { [1] = "Purchase", [2] = "BakingPowder" }
                game:GetService("ReplicatedStorage"):WaitForChild("UI"):WaitForChild("SugarNPC"):FireServer(unpack(args2))
            end)

            -- Unequip and equip actions
            task.spawn(function()
                local player = game.Players.LocalPlayer
                local backpack = player.Backpack
                local bakingPowder = backpack:WaitForChild("BakingPowder")
                local sugarCane = backpack:WaitForChild("SugarCane")

                if player.Character:FindFirstChild("BakingPowder") then
                    player.Character:FindFirstChild("BakingPowder").Parent = backpack
                end
                if player.Character:FindFirstChild("SugarCane") then
                    player.Character:FindFirstChild("SugarCane").Parent = backpack
                end

                wait(0.1)
                bakingPowder.Parent = player.Character
                wait(0.1)
                sugarCane.Parent = player.Character
                wait(0.1)
            end)

            -- Sell action
            task.spawn(function()
                local args3 = { [1] = "Sell" }
                game:GetService("ReplicatedStorage"):WaitForChild("UI"):WaitForChild("SugarNPC"):FireServer(unpack(args3))
            end)

            -- Wait before repeating
            task.wait(1.5)
        end
    end)
end)

-- Combat Features Page
local combatPage = UI:addPage("üéØcombat", 2, false, 6)

combatPage:addLabel("üéØcombat", "all the features of combat")

combatPage:addButton("aimbot | mobile support", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/m9Q1s7sg"))()
end)

combatPage:addButton("head expander | mobile and pc", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/T03iK6Ay"))()
end)

combatPage:addButton("highlight esp | pvp checker", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/QcEsWdLY", true))()
end)

combatPage:addButton("track lines | pvp checker", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/CHpQhRcv"))()
end)

-- Stats Page

-- Animations Page
local animationPage = UI:addPage("üèÉanimations", 2, false, 6)

animationPage:addLabel("üèÉanimations", "all the features of animations")

-- Crouch Animation Toggle
local crouchAnimationTrack = nil  -- Variable to hold the crouch animation track
local crouchIsRunning = false  -- Track whether the crouch animation is playing

animationPage:addToggle("crouch | OP", function(value)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")

    if not humanoid then return end

    local function findAndPlayCrouchAnimation()
        for _, obj in ipairs(workspace:GetDescendants()) do
            if obj:IsA("Animation") and obj.Name:lower():find("crouch") then
                local animator = humanoid:FindFirstChildOfClass("Animator")
                if not animator then
                    animator = Instance.new("Animator", humanoid)
                end

                local track = animator:LoadAnimation(obj)
                track:Play()
                return track
            end
        end
        return nil
    end

    if value then
        crouchAnimationTrack = findAndPlayCrouchAnimation()
    else
        if crouchAnimationTrack then
            crouchAnimationTrack:Stop()
            crouchAnimationTrack:Destroy()
            crouchAnimationTrack = nil
        end
    end
end)

-- HandCuff Animation Toggle
local handcuffAnimationTrack = nil  -- Variable to hold the handcuff animation track
local handcuffIsRunning = false  -- Track whether the handcuff animation is playing

animationPage:addToggle("handcuff | OP", function(value)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")

    if not humanoid then return end

    local function playHandcuffAnimation()
        local anim = game:GetService("ReplicatedStorage"):FindFirstChild("CuffedAnim")
        if anim and anim:IsA("Animation") then
            local animator = humanoid:FindFirstChildOfClass("Animator")
            if not animator then
                animator = Instance.new("Animator", humanoid)
            end

            handcuffAnimationTrack = animator:LoadAnimation(anim)
            handcuffAnimationTrack:Play()
            return handcuffAnimationTrack
        else
            return nil
        end
    end

    if value then
        handcuffAnimationTrack = playHandcuffAnimation()
    else
        if handcuffAnimationTrack then
            handcuffAnimationTrack:Stop()
            handcuffAnimationTrack:Destroy()
            handcuffAnimationTrack = nil
        end
    end
end)

-- Snake Crawl Animation Toggle
local snakeCrawlAnimationTrack = nil  -- Variable to hold the snake crawl animation track
local snakeCrawlIsRunning = false  -- Track whether the snake crawl animation is playing

animationPage:addToggle("snake crawl | OP", function(value)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")

    if not humanoid then return end

    local function findAndPlaySnakeCrawlAnimation()
        for _, obj in ipairs(workspace:GetDescendants()) do
            if obj:IsA("Animation") and obj.Name:lower():find("snake crawl") then
                local animator = humanoid:FindFirstChildOfClass("Animator")
                if not animator then
                    animator = Instance.new("Animator", humanoid)
                end

                local track = animator:LoadAnimation(obj)
                track:Play()
                return track
            end
        end
        return nil
    end

    if value then
        snakeCrawlAnimationTrack = findAndPlaySnakeCrawlAnimation()
    else
        if snakeCrawlAnimationTrack then
            snakeCrawlAnimationTrack:Stop()
            snakeCrawlAnimationTrack:Destroy()
            snakeCrawlAnimationTrack = nil
        end
    end
end)



local characterpage = UI:addPage("üßçcharacter", 2, false, 6)

characterpage:addLabel("üßçcharacter", "all the features of character")


characterpage:addButton("auto | skittles", function()
    
loadstring(game:HttpGet("https://pastebin.com/raw/eB7W81Ey"))()

end)



characterpage:addButton("inf | stamina", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/Z5JQtqeP", true))()
end)

characterpage:addButton("inf | hunger", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/aeZxPh0x"))()
end)

characterpage:addButton("inf | karma", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/5NPtManB", true))()
end)


characterpage:addLabel("customization | clothes", "customization / accessories")



characterpage:addButton("CrossChain",function()
    

loadstring(game:HttpGet("https://pastebin.com/raw/EuTmKu63"))()


end)


characterpage:addButton("HunnidChain",function()


loadstring(game:HttpGet("https://pastebin.com/raw/PQCY6Wd1"))()

end)

characterpage:addLabel("shoes | addons", "buy the available shoes listed ")



characterpage:addButton("Xmas shoe [200$]",function()
  
loadstring(game:HttpGet("https://pastebin.com/raw/nZip8SyM", true))()

end)

characterpage:addButton("GoldXmas shoe [200$]",function()

loadstring(game:HttpGet("https://pastebin.com/raw/Hu4e1mkB", true))()

end)

characterpage:addButton("Redmas shoe [200$]",function()
  
loadstring(game:HttpGet("https://pastebin.com/raw/AaaQCUij", true))()

end)

local carpage = UI:addPage("üöócars (coming soon)", 2, false, 6)

carpage:addLabel("üöócars", "all the features of cars")

