

loadstring(game:HttpGet("https://raw.githubusercontent.com/Pixeluted/adoniscries/main/Source.lua",true))()


local GUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/aaaa"))()

local UI = GUI:CreateWindow(" üóùÔ∏è unvield","yes it‚Äôs true")

local Home = UI:addPage("main",1,true,6)

Home:addLabel("‚öôÔ∏èmain","main functions")

Home:addButton("This is a button",function()
 


end)







-- Just an example of how you would actually use it i guess

local LP = UI:addPage("üéØcombat",2,false,6)

-- Label

LP:addLabel("üéØcombat","all the features of combat")

--- Button

LP:addButton("aimbot | mobile support",function()

loadstring(game:HttpGet("https://pastebin.com/raw/m9Q1s7sg"))()

end)

-- Toggle



LP:addButton("head expander | mobile and pc",function()

   loadstring(game:HttpGet("https://pastebin.com/raw/T03iK6Ay"))()

end)



LP:addButton("highlight esp | pvp checker", function()
  
loadstring(game:HttpGet("https://pastebin.com/raw/QcEsWdLY", true))()

end)





LP:addButton("track lines | pvp checker",function()

loadstring(game:HttpGet("https://pastebin.com/raw/CHpQhRcv"))()

end)


local LP = UI:addPage("üíâstats",2,false,6)

LP:addLabel("üíâstats","all the features of stats")


LP:addToggle("2x speed", function(value)
    local player = game.Players.LocalPlayer
    local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
    
    if humanoid then
        if value == false then
            -- Stop speed loop and reset speed
            speedLoop = false
            humanoid.WalkSpeed = 16
        else
            -- Start speed loop with 2x speed
            speedLoop = true
            task.spawn(function()
                while speedLoop do
                    humanoid.WalkSpeed = 24
                    wait(0.1)
                end
            end)
        end
    end
end)



LP:addButton("inf stamina",function()
  
loadstring(game:HttpGet("https://pastebin.com/raw/Z5JQtqeP", true))()

end)


LP:addButton("inf hunger",function()
  
loadstring(game:HttpGet("https://pastebin.com/raw/aeZxPh0x"))()

end)


LP:addButton("inf karma",function()
  
loadstring(game:HttpGet("https://pastebin.com/raw/5NPtManB", true))()

end)








local LP = UI:addPage("üèÉanimations",2,false,6)

-- Label

LP:addLabel("üèÉanimations","all the features of animations")

--- Button


-- Crouch Animation Toggle
local animationTrack = nil  -- Variable to hold the animation track
local isRunning = false  -- Track whether the animation is playing

LP:addToggle("crawl | OP", function(value)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")

    -- Ensure there's a humanoid before proceeding
    if not humanoid then return end

    -- Function to search for and play the Crouch animation in workspace
    local function findAndPlayCrouchAnimation()
        for _, obj in ipairs(workspace:GetDescendants()) do
            if obj:IsA("Animation") and obj.Name:lower():find("crouch") then
                -- Ensure the character has an Animator
                local animator = humanoid:FindFirstChildOfClass("Animator")
                if not animator then
                    animator = Instance.new("Animator", humanoid)
                end
                
                -- Load and play the animation
                local track = animator:LoadAnimation(obj)
                track:Play()
                print("Playing Crouch animation:", obj.Name)
                return track
            end
        end
        print("No Crouch animation found in workspace.")
        return nil
    end

    if value then
        -- When the toggle is on, start playing the animation if it's not running
        if not isRunning then
            animationTrack = findAndPlayCrouchAnimation()
            isRunning = true
        end
    else
        -- When the toggle is off, stop the animation if it's running
        if isRunning and animationTrack then
            animationTrack:Stop()
            animationTrack:Destroy() -- Ensure it's fully removed
            animationTrack = nil
            isRunning = false
            print("Stopped Crouch animation.")
        end
    end
end)


-- HandCuff Animation Toggle
local animationTrack = nil  -- Variable to hold the animation track
local isRunning = false  -- Track whether the animation is playing

LP:addToggle("crawl | OP", function(value)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")

    -- Ensure there's a humanoid before proceeding
    if not humanoid then return end

    -- Function to play the CuffedAnim animation
    local function playCuffedAnimation()
        local anim = game:GetService("ReplicatedStorage"):FindFirstChild("CuffedAnim")
        if anim and anim:IsA("Animation") then
            local animator = humanoid:FindFirstChildOfClass("Animator")
            if not animator then
                animator = Instance.new("Animator", humanoid)
            end

            -- Load and play the animation
            animationTrack = animator:LoadAnimation(anim)
            animationTrack:Play()
            print("Playing Cuffed animation")
            return animationTrack
        else
            print("CuffedAnim not found in ReplicatedStorage.")
            return nil
        end
    end

    if value then
        -- When the toggle is on, start playing the animation if it's not running
        if not isRunning then
            animationTrack = playCuffedAnimation()
            isRunning = true
        end
    else
        -- When the toggle is off, stop the animation if it's running
        if isRunning and animationTrack then
            animationTrack:Stop()
            animationTrack:Destroy() -- Ensure it's fully removed
            animationTrack = nil
            isRunning = false
            print("Stopped Cuffed animation.")
        end
    end
end)


-- Snake Crawl Animation Toggle
local animationTrack = nil  -- Variable to hold the animation track
local isRunning = false  -- Track whether the animation is playing

LP:addToggle("crawl | OP)", function(value)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")

    -- Ensure there's a humanoid before proceeding
    if not humanoid then return end

    -- Function to search for and play the Crawl animation in workspace
    local function findAndPlayCrawlAnimation()
        for _, obj in ipairs(workspace:GetDescendants()) do
            if obj:IsA("Animation") and obj.Name:lower():find("crawl") then
                -- Ensure the character has an Animator
                local animator = humanoid:FindFirstChildOfClass("Animator")
                if not animator then
                    animator = Instance.new("Animator", humanoid)
                end
                
                -- Load and play the animation
                local track = animator:LoadAnimation(obj)
                track:Play()
                print("Playing Crawl animation:", obj.Name)
                return track
            end
        end
        print("No Crawl animation found in workspace.")
        return nil
    end

    if value then
        -- When the toggle is on, start playing the animation if it's not running
        if not isRunning then
            animationTrack = findAndPlayCrawlAnimation()
            isRunning = true
        end
    else
        -- When the toggle is off, stop the animation if it's running
        if isRunning and animationTrack then
            animationTrack:Stop()
            animationTrack:Destroy() -- Ensure it's fully removed
            animationTrack = nil
            isRunning = false
            print("Stopped Crawl animation.")
        end
    end
end)


